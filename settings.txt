-------------
Description
-------------
- performing a 3 parameter fit
-------------
Individual
-------------
parameter list,		dust_mass, rin, radius
# if problem type = minimise, a smaller fitness score is better. if problem type = maximise, a larger fitness score is better
problem type,		minimise	

-------------
Bounds
-------------
# Note the bounds must be given in the same order as the parameter list
lower bounds, 		1.0E-8, 1.0, 1
upper bounds, 		3.0E-5, 10.0, 800

-------------
Out of Bounds
-------------
# What to do when an individual strays out of bounds
1. Do nothing
	E.g. stray, nothing
2. For each out of bounds parameter, set it to the closes boundary
	E.g. stray, para to boundary
3. For each out of bounds parameter, randomise it inside the boundary
	E.g. stray, para randomise
4. Destroy the individual and replace it with a new individual randomised inside the bounds
	E.g. stray, ind randomise

stray,				para randomise

-------------
Simulation settings
-------------
population size,	10

-------------
Culling
-------------
# percentage of the previous generation to be eliminate. This takes place before selection, cloning and mutation. This is rounded down.

cull rate, 			0.3

-------------
Crossover
-------------

# percentage of the next generation generated by crossover. This is rounded up if there are mutants. If there are no mutants this is rounded down.
crossover rate,		0.3

# method of crossover:
	1.	multi-point, broodN, survivalN
		chromosomes are split at gene boundaries. There are at least 1 gene that differentiates the child from the parent but there may be more. 
		There is also a brood number (number of offspring a set of parents have) and then a survival number which is the number of offspring from the brood that actually survive. 
		E.g. crossover method, multi-point, 2, 1
		a set of parents produce 2 children but only 1 survives

crossover method, 	multi-point, 1, 1

-------------
Selection
-------------

# method of selection:
	1.	tournament selection, win rate, number of participants
		Note an individual cannot participate more than once in a tournament. Essentially the best participant has a win rate chance of entering the gene pool. If that fails, the next best gets a win rate chance of entering the gene pool. This continues and if no individual wins, the least fit indiviual enters the gene pool. In general, if there are only 2 participants you use the win rate. If there are more than two participants the win rate is set to 1 so that the fittest always wins.

		E.g. selection method, tournament, 0.75, 2

	2.	roulette wheel
		E.g. selection method, roulette

selection method,	roulette, SUS

-------------
Cloning
-------------

# Percentage of the population produced by clones. This is always rounded up. The fittest individuals are cloned

clone rate,			0.05

-------------
Mutation
-------------
# Note that mutants are always spawned. i.e. they do not replace the original
# An individual may spawn multiple mutants
# Mutants will be generated to fill the remaining population. i.e. generate all clones and all individuals from crossover. The remaining will be made by mutation.

# method of mutation:
	1. random mutation
		In this version of random mutation all the genes are mutated
	E.g. mutation method, random

mutation method, 	random

# can select to produce mutants from
	1. the previous generation: prev gen
	2. the current gene pool: gene pool

	E.g. mutation selection, prev gen

mutation selection,	gene pool

-------------
Stopping criteria
-------------
# What is the stopping criteria:
# 1. epochs: stop after a certain number of epochs have been reached. Need to give the maximum number of generations (INCLUDING the initial population), i.e. 5 epochs, means the initial generation followed by 4 generations
#	E.g. stopping criteria, epochs, 50
# 2. Change in the best individual. If the fitness of the best individual does not change
over a specified number of generations, then stop. If you specify 3 generations, [1, 2, 3] it will be the difference between generation 1 and 3. Note that it will run for at least the given number of epochs regardless of the fitness change. E.g will be the same as epochs if the change in fitness is smaller than the specified threshold
#	E.g. stopping criteria, best, 0.0001, 10
stopping criteria, best, 0.0001, 15
-------------
Results
-------------
results folder,		TEMP
# saves data of the best individual. The data is assigned in the user written evaluation function. If T, data is saved.
save data, 			T 		
